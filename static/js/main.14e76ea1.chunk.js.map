{"version":3,"sources":["components/AppHeader/AppHeader.js","components/TodoList/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/Modal/Modal.js","services/dataService.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","itemQty","addTodoItem","className","onClick","TodoListItem","index","toDoItem","deleteTodo","editTodoItem","id","name","description","TodoList","toDoList","deleteTodoItem","map","listItem","key","Modal","config","close","save","active","useState","listItemName","setListItemName","listItemDescription","setListItemDescription","useEffect","tabIndex","title","type","aria-label","aria-hidden","htmlFor","value","onChange","e","target","aria-describedby","rows","disabled","setDataToLocal","data","localStorage","setItem","JSON","stringify","generateNewId","ids","item","Number","parseInt","replace","sort","a","b","i","length","App","setToDoList","modalConfig","setModalConfig","parse","getItem","newList","filter","find","cloneDeep","itemIndex","findIndex","push","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.14e76ea1.chunk.js","sourcesContent":["import React from 'react';\n\nimport './AppHeader.css';\n\nconst AppHeader = ({itemQty, addTodoItem}) => {\n    return (\n      <header className=\"App-header\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <h1 className=\"mb-0\">Task list / {itemQty} items</h1>\n            </div>\n            <div className=\"col\">\n              <div className=\"create-btn\" onClick={addTodoItem}>\n                <p className=\"btn-text\">Create new</p>\n                <div className=\"btn-icon\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n};\n\nexport default AppHeader;","import React from 'react';\n\nimport './TodoListItem.css';\n\nfunction TodoListItem({index, toDoItem, deleteTodo, editTodoItem}) {\n  return (\n    <li className=\"todo-list-item list-group-item list-body\">\n      <div className=\"row\">\n        <div className=\"col-1 text-center\">{index + 1}</div>\n        <div className=\"col-4 edit-btn text-overflow\" onClick={() => editTodoItem(toDoItem.id)}>\n          <i className=\"mail-icon\"></i>\n          {toDoItem.name}\n        </div>\n        <div className=\"col-6 text-overflow\">{toDoItem.description}</div>\n        <div className=\"col-1 text-center\">\n          <div className=\"delete-icon\" onClick={() => deleteTodo(toDoItem.id)}></div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default TodoListItem;","import React from 'react';\nimport TodoListItem from './TodoListItem/TodoListItem'\n\nfunction TodoList({toDoList, deleteTodoItem, editTodoItem}) {\n  return (\n    <div className=\"todo-list\">\n      <div className=\"container\">\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            <div className=\"row\">\n              <div className=\"col-1 text-center\">#</div>\n              <div className=\"col-4\">Name</div>\n              <div className=\"col-6\">Description</div>\n              <div className=\"col-1 text-center\">Delete</div>\n            </div>\n          </li>\n          {\n            toDoList.map((listItem, index) => {\n              return <TodoListItem\n                key={listItem.id}\n                index={index}\n                toDoItem={listItem}\n                deleteTodo={deleteTodoItem}\n                editTodoItem={editTodoItem}\n              />\n            })\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;","import React, {useState, useEffect} from 'react';\n\nimport './Modal.css';\n\nconst Modal = ({config, close, save}) => {\n  let className = config.active ? ' show' : '';\n  const [listItemName, setListItemName] = useState('');\n  const [listItemDescription, setListItemDescription] = useState('');\n\n  useEffect(() => {\n    setListItemName(config.listItem.name);\n    setListItemDescription(config.listItem.description);\n  }, [config]);\n\n  function onNameChange(e) {\n    setListItemName(e.target.value);\n  }\n\n  function onDescriptionChange(e) {\n    setListItemDescription(e.target.value);\n  }\n\n  return (\n    <div className={\"modal fade\" + className} tabIndex=\"-1\">\n      <div className=\"modal-backdrop show\" onClick={close}></div>\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"staticBackdropLabel\">{config.title}</h5>\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={close}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <label htmlFor=\"nameInput\">Name:</label>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                value={listItemName}\n                onChange={onNameChange}\n                className=\"form-control\"\n                id=\"nameInput\"\n                aria-label=\"nameInput\"\n                aria-describedby=\"nameInput\" />\n            </div>\n            <label htmlFor=\"descriptionInput\">Description:</label>\n            <div className=\"input-group mb-3\">\n              <textarea\n                type=\"text\"\n                rows=\"3\"\n                value={listItemDescription}\n                onChange={onDescriptionChange}\n                className=\"form-control\"\n                id=\"descriptionInput\"\n                aria-label=\"descriptionInput\"\n                aria-describedby=\"descriptionInput\" />\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={close}>Close</button>\n            <button\n              disabled={!listItemName || !listItemDescription}\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => save({id: config.listItem.id, name: listItemName, description: listItemDescription})}>\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;","const idHash = 'todoid';\n\nfunction getDataFromLocal() {\n  return JSON.parse(localStorage.getItem('todoListData') || \"[]\");\n}\n\nfunction setDataToLocal(data) {\n  localStorage.setItem('todoListData', JSON.stringify(data));\n}\n\nfunction generateNewId (toDoList) {\n  let ids = toDoList\n    .map(item => Number.parseInt(item.id.replace(idHash, ''), 10))\n    .sort((a, b) => (a - b));\n  for (let i = 0; i <= ids.length; i++) {\n    if (ids[i] !== i) {\n      return `${idHash}${i}`;\n    }\n  }\n}\n\nexport {getDataFromLocal, setDataToLocal, generateNewId};","import React, {useState, useEffect} from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport TodoList from './components/TodoList/TodoList';\nimport Modal from './components/Modal/Modal';\n\nimport {getDataFromLocal, setDataToLocal, generateNewId} from './services/dataService';\n\nfunction App() {\n  const [toDoList, setToDoList] = useState([]);\n  const [modalConfig, setModalConfig] = useState({\n    title: '',\n    active: false,\n    listItem: {\n      id: '',\n      name: '',\n      description: '',\n    }\n  });\n\n  useEffect(() => {\n    setToDoList(getDataFromLocal());\n  }, []);\n\n  function editItem(id) {\n    const listItem = toDoList.find(item => item.id === id);\n    setModalConfig({\n      title: '',\n      active: true,\n      listItem: listItem,\n    });\n  }\n\n  function addItem() {\n    setModalConfig({\n      title: 'New Task',\n      active: true,\n      listItem: {\n        id: generateNewId(toDoList),\n        name: '',\n        description: '',\n      }\n    });\n  }\n\n  function modalClose() {\n    setModalConfig({\n      title: '',\n      active: false,\n      listItem: {\n        id: '',\n        name: '',\n        description: '',\n      }\n    });\n  }\n\n  function saveTodoItem(listItem) {\n    const newList = cloneDeep(toDoList);\n    let itemIndex = newList.findIndex(item => item.id === listItem.id);\n    if (~itemIndex) {\n      newList[itemIndex] = listItem;\n    } else {\n      newList.push(listItem);\n    }\n    setToDoList(newList);\n    setDataToLocal(newList);\n    setModalConfig({\n      title: '',\n      active: false,\n      listItem: {\n        id: '',\n        name: '',\n        description: '',\n      }\n    });\n  }\n\n  function deleteTodoItem(id) {\n    const newList = toDoList.filter((item) => {\n        return item.id !== id\n      });\n    setDataToLocal(newList);\n    setToDoList(newList);\n  }\n\n  return (\n    <div className=\"App\">\n      <AppHeader itemQty={toDoList.length} addTodoItem={addItem} />\n      <main className=\"App-content\">\n        <TodoList toDoList={toDoList} deleteTodoItem={deleteTodoItem} editTodoItem={editItem}/>\n      </main>\n      <Modal\n        config={modalConfig}\n        close={modalClose}\n        save={saveTodoItem}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}